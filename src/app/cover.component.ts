import { Component, ElementRef, Input, ViewChild, DoCheck, OnInit } from '@angular/core';
import { Config } from './config';

@Component({
    selector: 'cover',
    styles: [],
    template: `<canvas #canvas></canvas>`
})

export class CoverComponent implements DoCheck, OnInit {

    componentName: 'CoverComponent';

    private oldConfig: Config;
    @Input() public config: Config;

    @ViewChild('canvas') canvasRef:ElementRef;
    private canvas: any;
    private ctx: any;
    private width: number = 560;
    private height: number = 746;

    private image: any = new Image();
    private reader: FileReader = new FileReader();

    private timeColor: string = "#e90606";

    private loaded: boolean = false;
    
    constructor() {
        this.reader.addEventListener("load", () => { this.loadFile() }, false);
        this.image.addEventListener("load", () => { this.draw() }, false);
    }

    ngDoCheck() {
        if (this.config.file && ! this.loaded) {
            this.loaded = true;
            this.reader.readAsDataURL(this.config.file);
        }

        this.draw();
    }

    ngOnInit() {
        this.canvas = this.canvasRef.nativeElement;
        this.canvas.width = this.width;
        this.canvas.height = this.height;

        this.ctx = this.canvas.getContext('2d');

        this.draw();
    }

    loadFile() {
        this.image.src = this.reader.result;
    }

    draw() {
        this.drawBackground();
        this.drawForeground();
    }

    drawBackground() {
        var ctx = this.ctx;

        ctx.fillStyle="black";
        ctx.fillRect(0, 0, this.width, this.height);

        ctx.drawImage(this.image, 0, 0);
    }

    drawForeground() {
        this.drawBorder();
        this.drawHeadline();
        this.drawLogo();
    }

    drawHeadline() {
        var ctx = this.ctx;

        ctx.save();

        /* Draw the headline */
        if (this.config.headline) {
            ctx.font = "24px Franklin Gothic";
            ctx.fillStyle="white";
            ctx.textAlign = "right";

            var padding = 50;
            var x: number;
            var y: number;


            /* Set headline justification */
            if (this.config.position == 0 || 
                this.config.position == 3) {
                x = padding;
                ctx.textAlign = "left";
            } else if (this.config.position == 1 || 
                       this.config.position == 4) {
                x = this.width / 2;
                ctx.textAlign = "center";
            } else  {
                x = this.width - padding;
                ctx.textAlign = "right";
            }

            if (this.config.position < 2) {
                var lines = this.config.headline.split("\n");
                var y = 200;
                for(let line of lines) {
                    ctx.fillText(line, x, y);
                    y += 24;
                }
            } else {
                var lines = this.config.headline.split("\n").reverse();
                var y = this.height - padding;
                for(let line of lines) {
                    ctx.fillText(line, x, y);
                    y -= 24;
                }
            }

        }

        ctx.restore();
    }

    drawLogo() {
        var ctx = this.ctx;

        ctx.save();

        /* Boss the logo */
        ctx.strokeStyle="rgba(0,0,0,0)";
        ctx.miterLimit=4;
        ctx.fillStyle=this.config.logoColor;
        ctx.transform(5, // Horizontal Scaling
                      0,  // Horizontal Skewing
                      0,  // Vertical Skewing
                      5, // Vertical Scaling
                      95, // Horizontal Moving
                      40) // Vertical Moving
                      
        //ctx.transform(41.572011,0,0,41.572011,19.997187,14.25613);
        //ctx.save();
        ctx.beginPath();
        ctx.moveTo(7.582039,1.6435508);
        ctx.lineTo(5.5075231,1.6333194);
        ctx.lineTo(2.2935663,1.6317777);
        ctx.bezierCurveTo(2.0706587,1.6314973,0.34694817,1.6464942,0.34694817,1.6464942);
        ctx.lineTo(0.31433085,4.2269243);
        ctx.lineTo(0.000067670795,4.2361747);
        ctx.lineTo(0.02009823,1.3346449);
        ctx.lineTo(0.00994761,0.1430302);
        ctx.bezierCurveTo(1.1054024,0.1925056,5.063738,0.2271244,9.1709493,0.2296472);
        ctx.bezierCurveTo(13.960282,0.2321702,17.04607,0.1902631,18.256972,0.1573262);
        ctx.lineTo(18.241812,1.4777451);
        ctx.lineTo(18.265362,4.4122119);
        ctx.lineTo(17.939459,4.4084319);
        ctx.bezierCurveTo(17.941658999999998,4.1689037,17.887079,3.1949528000000003,17.890059,3.0999264);
        ctx.bezierCurveTo(17.891259,3.0644664,17.822119,1.7572225000000001,17.812779000000003,1.6589724000000001);
        ctx.lineTo(16.437437000000003,1.6400514000000002);
        ctx.lineTo(12.316963000000003,1.6372514000000002);
        ctx.lineTo(10.737932000000002,1.6418814000000002);
        ctx.lineTo(10.730532000000002,19.743154999999998);
        ctx.bezierCurveTo(10.730532000000002,19.768804999999997,10.758822000000002,20.931126,10.765312000000002,21.171774999999997);
        ctx.bezierCurveTo(10.923527000000002,21.192514999999997,12.450586000000001,21.291188999999996,12.726818000000002,21.292169999999995);
        ctx.lineTo(12.834550000000002,21.291188999999996);
        ctx.lineTo(12.834550000000002,21.783700999999997);
        ctx.bezierCurveTo(12.751860000000002,21.783700999999997,12.650079000000002,21.792201,12.564273000000002,21.791700999999996);
        ctx.bezierCurveTo(11.697545000000002,21.781610999999995,10.296895000000003,21.684620999999996,9.301728200000001,21.684339999999995);
        ctx.bezierCurveTo(8.3222611,21.683358999999996,6.940694200000001,21.772499999999994,5.919947900000001,21.785813999999995);
        ctx.bezierCurveTo(5.892337900000001,21.786794999999994,5.682423400000001,21.781613999999994,5.604466600000001,21.777813999999996);
        ctx.lineTo(5.602296600000002,21.252224999999996);
        ctx.bezierCurveTo(5.612988600000001,21.253524999999996,5.675110600000002,21.251524999999997,5.771744200000001,21.248324999999994);
        ctx.bezierCurveTo(6.203213200000001,21.232764999999993,7.265644700000001,21.167594999999995,7.541876900000002,21.146150999999993);
        ctx.lineTo(7.585591900000002,21.140150999999992);
        ctx.lineTo(7.585050500000001,19.590294999999994);
        ctx.lineTo(7.582070500000001,1.6436141999999947);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        //ctx.save();
        ctx.beginPath();
        ctx.moveTo(33.969088,0.13816675);
        ctx.bezierCurveTo(33.969088,0.13816675,35.514689,4.5931966,35.766019,5.2452068999999995);
        ctx.bezierCurveTo(36.017619,5.897217199999999,40.741852,17.169763,40.741852,17.169763);
        ctx.bezierCurveTo(40.741852,17.169763,42.965379,12.315705999999999,44.946103,7.106351399999999);
        ctx.bezierCurveTo(45.348068,6.051950499999999,45.874276,4.6767300999999994,46.261488,3.5631828999999993);
        ctx.bezierCurveTo(46.829923,1.9332973999999992,47.453983,0.14573522999999922,47.453983,0.14573522999999922);
        ctx.lineTo(48.671516000000004,0.14643600999999923);
        ctx.bezierCurveTo(48.671516000000004,0.14643600999999923,48.972245,2.136945499999999,49.07821800000001,3.023578599999999);
        ctx.bezierCurveTo(49.388285,5.6028875,51.416920000000005,16.085508,52.12962900000001,19.534211);
        ctx.bezierCurveTo(52.30679100000001,20.396317,52.442133000000005,21.142792999999998,52.442133000000005,21.142792999999998);
        ctx.bezierCurveTo(52.65096500000001,21.156532999999996,53.47370600000001,21.232912999999996,53.962425,21.271036);
        ctx.bezierCurveTo(54.063660000000006,21.279035999999998,54.337050000000005,21.292755999999997,54.400255,21.293326);
        ctx.lineTo(54.400796,21.812328);
        ctx.bezierCurveTo(54.400796,21.812328,54.180731,21.822978,54.058788,21.822978);
        ctx.bezierCurveTo(52.9678,21.816077999999997,51.267639,21.724588,50.218741,21.723608);
        ctx.bezierCurveTo(49.286508000000005,21.723328,48.388382,21.796208,47.455607,21.814148);
        ctx.bezierCurveTo(47.297258,21.817548,47.137284,21.810548,46.974739,21.810548);
        ctx.lineTo(46.974739,21.296732000000002);
        ctx.bezierCurveTo(46.980539,21.295432,47.104937,21.289132000000002,47.170037,21.291132);
        ctx.bezierCurveTo(47.626273,21.271512,48.833926,21.162748,48.953974,21.157142);
        ctx.bezierCurveTo(48.954515,20.969472,48.889144,20.31606,48.791429,19.648772);
        ctx.bezierCurveTo(48.723349,19.177565,48.607906,18.373204,48.485421,17.580196);
        ctx.bezierCurveTo(48.221776000000006,16.038609,46.994228,9.648852100000001,46.629888,7.8758663);
        ctx.bezierCurveTo(46.570338,7.5844799,46.533528000000004,7.4216175,46.533528000000004,7.4216175);
        ctx.bezierCurveTo(46.533528000000004,7.4216175,42.718519,16.468049999999998,41.950050000000005,18.250425999999997);
        ctx.bezierCurveTo(41.87480000000001,18.425902999999998,41.821204,18.548819999999996,41.803475000000006,18.589605999999996);
        ctx.bezierCurveTo(41.067758000000005,20.306108999999996,40.45087100000001,21.836201999999997,40.45087100000001,21.836201999999997);
        ctx.lineTo(39.367864,21.830683);
        ctx.lineTo(33.438955,7.6980942);
        ctx.lineTo(33.298471,7.3694261);
        ctx.bezierCurveTo(33.298471,7.3694261,32.779436,10.017692,32.029779,13.754558);
        ctx.bezierCurveTo(31.633498999999997,15.773519,30.811162999999997,20.821973999999997,30.755808,21.155968);
        ctx.bezierCurveTo(31.228555999999998,21.220158,32.157947,21.291499,32.411577,21.283651000000003);
        ctx.bezierCurveTo(32.469907,21.283651000000003,32.568709,21.286051000000004,32.642335,21.286051000000004);
        ctx.lineTo(32.641658,21.797064000000002);
        ctx.bezierCurveTo(32.53555,21.810794,32.28801,21.811644,32.277995,21.811504000000003);
        ctx.bezierCurveTo(31.381897999999996,21.793844000000004,30.736318999999998,21.729794000000002,29.769709,21.729794000000002);
        ctx.bezierCurveTo(29.515403,21.729794000000002,28.171730999999998,21.793144,27.697359,21.808424000000002);
        ctx.bezierCurveTo(27.499896,21.816924000000004,27.220820999999997,21.795674,27.167631999999998,21.797774000000004);
        ctx.lineTo(27.168308999999997,21.292228000000005);
        ctx.bezierCurveTo(27.214598999999996,21.292228000000005,27.308657999999998,21.273588000000004,27.368072999999995,21.271488000000005);
        ctx.bezierCurveTo(27.796834999999994,21.255088000000004,28.455948999999997,21.193558000000007,29.015179999999994,21.126846000000004);
        ctx.bezierCurveTo(29.060649999999995,20.878067000000005,29.544771999999995,18.389019000000005,29.699331999999995,17.507993000000003);
        ctx.bezierCurveTo(30.294157999999996,14.589784000000002,32.048590999999995,4.8415858000000025,32.268657,3.527473900000002);
        ctx.bezierCurveTo(32.461248,2.107403400000002,32.685779,0.3419860000000021,32.705675,0.1471678000000023);
        ctx.bezierCurveTo(33.169084,0.15501680000000229,33.969088,0.13819780000000229,33.969088,0.13819780000000229);
        ctx.fill();
        ctx.stroke();
        //ctx.restore();
        //ctx.save();
        ctx.beginPath();
        ctx.moveTo(26.074275,21.81165);
        ctx.bezierCurveTo(25.269669,21.811510000000002,23.904073,21.68677,22.879943,21.686209);
        ctx.bezierCurveTo(21.867588,21.685509000000003,20.493464,21.808006000000002,19.504929,21.807726000000002);
        ctx.bezierCurveTo(19.420609,21.808426,19.272277,21.791046,19.191343,21.791046);
        ctx.lineTo(19.191614,21.277371000000002);
        ctx.bezierCurveTo(19.386505,21.273271,20.259729,21.199861000000002,20.50348,21.183471);
        ctx.bezierCurveTo(20.788374,21.164131,21.052019,21.150811,21.16909,21.115771000000002);
        ctx.bezierCurveTo(21.16909,21.115771000000002,21.17169,20.496557000000003,21.17549,19.535921000000002);
        ctx.bezierCurveTo(21.18808,16.214341,21.21433,6.826486000000003,21.18339,2.5786082000000015);
        ctx.bezierCurveTo(21.18059,2.1305263000000014,21.177889999999998,0.9949744200000015,21.177889999999998,0.8304301200000015);
        ctx.bezierCurveTo(20.992742999999997,0.8124900200000015,20.73397,0.7893641200000014,20.548416999999997,0.7666587200000015);
        ctx.bezierCurveTo(20.316166999999997,0.7553060200000015,19.360384999999997,0.6705110200000015,19.197839,0.6616811100000015);
        ctx.lineTo(19.192438999999997,0.14772546000000153);
        ctx.bezierCurveTo(20.140099999999997,0.14814593000000154,21.546840999999997,0.23770626000000153,22.688582999999998,0.23840706000000153);
        ctx.bezierCurveTo(23.780112999999997,0.23896769000000154,25.259801999999997,0.15150976000000155,26.379618999999998,0.15193016000000154);
        ctx.lineTo(26.377318999999996,0.6876101500000016);
        ctx.bezierCurveTo(26.199344999999997,0.6984022500000016,25.767469999999996,0.7233501500000016,25.752987999999995,0.7247517500000016);
        ctx.bezierCurveTo(25.426137999999995,0.7536240500000015,24.512717999999996,0.8489308300000016,24.288320999999996,0.8630866900000016);
        ctx.bezierCurveTo(24.287914999999995,1.1834856000000016,24.287220999999995,1.7808346000000017,24.286420999999997,2.5159580000000017);
        ctx.bezierCurveTo(24.283720999999996,6.319818500000002,24.274780999999997,16.270824,24.271530999999996,19.621557000000003);
        ctx.bezierCurveTo(24.270989999999998,20.059828000000003,24.270583999999996,20.464181000000004,24.270030999999996,20.707353);
        ctx.bezierCurveTo(24.270030999999996,20.96356,24.271630999999996,21.117172,24.274330999999997,21.127264);
        ctx.bezierCurveTo(24.280430999999997,21.146184,24.852915999999997,21.195804,24.985279999999996,21.204354);
        ctx.bezierCurveTo(25.237150999999997,21.230563999999998,26.277656999999998,21.274434,26.309597999999998,21.281163999999997);
        ctx.lineTo(26.379027999999998,21.281163999999997);
        ctx.lineTo(26.377927999999997,21.794978999999998);
        ctx.bezierCurveTo(26.309578,21.794559,26.143922999999997,21.812638999999997,26.074222,21.811659);
        ctx.fill();
        ctx.stroke();
        //ctx.restore();
        //ctx.save();
        ctx.beginPath();
        ctx.moveTo(60.173142,1.7228797);
        ctx.lineTo(60.163641999999996,10.24092);
        ctx.lineTo(66.071032,10.262789999999999);
        ctx.bezierCurveTo(66.098102,10.262789999999999,67.63436300000001,10.219619999999999,67.671311,10.22004);
        ctx.bezierCurveTo(67.764831,10.220740999999999,68.81941400000001,10.164399999999999,68.860016,10.151499999999999);
        ctx.bezierCurveTo(68.860016,10.151499999999999,68.877206,10.061939999999998,68.900216,9.997607799999999);
        ctx.bezierCurveTo(68.986696,9.4821104,69.094837,8.992962499999999,69.123124,8.6104741);
        ctx.bezierCurveTo(69.123124,8.6104741,69.150194,8.446910899999999,69.152764,8.3360468);
        ctx.lineTo(69.488276,8.329596800000001);
        ctx.bezierCurveTo(69.488682,8.369260800000001,69.505736,8.4676515,69.503976,8.606547);
        ctx.bezierCurveTo(69.499276,9.119661700000002,69.458636,10.186536,69.45985599999999,10.884378000000002);
        ctx.bezierCurveTo(69.46105599999999,11.891126000000002,69.49030599999999,12.799623000000002,69.49626599999999,13.254853);
        ctx.bezierCurveTo(69.50096599999999,13.384078,69.491666,13.591650000000001,69.491666,13.591650000000001);
        ctx.lineTo(69.123131,13.591650000000001);
        ctx.bezierCurveTo(69.11733100000001,13.544,69.110811,13.493400000000001,69.10269100000001,13.441262000000002);
        ctx.bezierCurveTo(69.03800100000001,12.860591000000001,68.984808,12.451053000000002,68.887904,11.859450000000002);
        ctx.bezierCurveTo(68.884904,11.829460000000003,68.86476400000001,11.722797000000002,68.857724,11.654681000000002);
        ctx.bezierCurveTo(68.669464,11.643051000000002,68.17276000000001,11.627071000000003,67.90735500000001,11.619221000000001);
        ctx.bezierCurveTo(67.792044,11.615821000000002,66.35228000000001,11.605481000000001,64.73278300000001,11.602681);
        ctx.bezierCurveTo(64.06825500000001,11.601181,62.87616700000001,11.629731,62.37039500000001,11.628751000000001);
        ctx.bezierCurveTo(61.77787000000001,11.627651000000002,60.79975600000001,11.661411000000001,60.16175600000001,11.683131000000001);
        ctx.lineTo(60.16295600000001,19.407462000000002);
        ctx.lineTo(60.18812600000001,20.402577);
        ctx.lineTo(63.77413700000001,20.462567);
        ctx.lineTo(68.88125200000002,20.460367);
        ctx.bezierCurveTo(68.90426200000002,20.460367,70.05006200000001,20.418737,70.40858200000002,20.425607000000003);
        ctx.bezierCurveTo(70.48329200000002,20.427107000000003,70.63676800000002,20.414537000000003,70.63676800000002,20.414537000000003);
        ctx.bezierCurveTo(70.67087800000002,20.165338000000002,70.71296800000002,19.659792000000003,70.75465000000001,19.177091000000004);
        ctx.bezierCurveTo(70.75935000000001,19.121031000000006,70.88687900000001,17.839293000000005,70.88687900000001,17.495067000000006);
        ctx.lineTo(71.201819,17.491567000000007);
        ctx.bezierCurveTo(71.201819,17.81771300000001,71.132529,21.864465000000006,71.132529,21.864465000000006);
        ctx.bezierCurveTo(70.556921,21.863624000000005,68.79017200000001,21.861065000000007,66.607248,21.830265000000008);
        ctx.bezierCurveTo(65.285366,21.81148500000001,63.811361,21.810785000000006,62.355762,21.79045500000001);
        ctx.bezierCurveTo(61.176396,21.77363500000001,60.010563,21.733975000000008,58.948132,21.73495500000001);
        ctx.bezierCurveTo(57.435283,21.73579600000001,55.953158,21.82731500000001,55.378226,21.82759500000001);
        ctx.bezierCurveTo(55.246404,21.82759500000001,55.013887,21.81819500000001,54.963404999999995,21.81849500000001);
        ctx.lineTo(54.96394599999999,21.30944400000001);
        ctx.lineTo(55.069241999999996,21.30944400000001);
        ctx.bezierCurveTo(55.424648999999995,21.30804400000001,56.468132,21.25100400000001,57.01247599999999,21.15779500000001);
        ctx.bezierCurveTo(57.01247599999999,21.05604100000001,57.04915599999999,19.79602900000001,57.04915599999999,19.77010000000001);
        ctx.bezierCurveTo(57.04915599999999,19.77010000000001,57.05555599999999,3.77580630000001,57.05635599999999,3.058903400000009);
        ctx.bezierCurveTo(57.056896999999985,2.285236800000009,57.04214599999999,0.9977547800000091,57.04254599999999,0.8839473100000093);
        ctx.bezierCurveTo(56.73477899999999,0.8497490100000092,56.62461099999999,0.8312483100000092,56.56005299999999,0.8193349100000092);
        ctx.bezierCurveTo(56.23347399999999,0.7761666100000092,55.588976999999986,0.7240281100000092,55.24399199999999,0.7009022600000092);
        ctx.bezierCurveTo(55.14573199999999,0.7031452600000092,55.03854299999999,0.6915112600000092,54.98630099999999,0.6822613600000093);
        ctx.bezierCurveTo(54.98630099999999,0.6822613600000093,54.98575999999999,0.1821812500000093,54.98280099999999,0.1748930900000093);
        ctx.bezierCurveTo(55.060490999999985,0.1797980900000093,55.221814999999985,0.1690060900000093,55.511445999999985,0.1702680900000093);
        ctx.bezierCurveTo(56.11994099999998,0.1727910900000093,57.239215999999985,0.2570252900000093,58.60927899999999,0.2592677900000093);
        ctx.bezierCurveTo(59.469239999999985,0.2608097900000093,60.858249999999984,0.22254669000000932,61.852063999999984,0.2109135900000093);
        ctx.bezierCurveTo(63.269089999999984,0.21161437000000932,64.34478499999999,0.2005419900000093,65.71877299999998,0.1925529900000093);
        ctx.bezierCurveTo(67.95948799999998,0.1802191900000093,69.87375999999999,0.1666239900000093,70.62219899999998,0.1634002900000093);
        ctx.bezierCurveTo(70.84050499999998,0.1629798200000093,70.96001199999998,0.1621392900000093,70.96001199999998,0.1621392900000093);
        ctx.bezierCurveTo(70.96001199999998,0.2011028900000093,70.95821199999997,0.2474948900000093,70.95821199999997,0.29921282000000926);
        ctx.bezierCurveTo(70.95861799999997,0.45955241000000924,70.95181199999998,0.7415482500000092,70.95411199999998,1.0877360000000094);
        ctx.bezierCurveTo(70.95991199999997,2.1651227000000093,70.98767199999998,3.8587797000000092,70.98767199999998,4.411839100000009);
        ctx.lineTo(70.67327299999998,4.4128202000000085);
        ctx.lineTo(70.66977299999998,4.261170300000009);
        ctx.bezierCurveTo(70.638702,3.8832594,70.569677,2.816805,70.484548,1.918679);
        ctx.bezierCurveTo(70.476248,1.83879,70.461678,1.7757189,70.461678,1.7757189);
        ctx.bezierCurveTo(70.274365,1.7696889,69.50819600000001,1.7465659,69.494527,1.7350739);
        ctx.bezierCurveTo(69.482077,1.7245618999999999,68.871414,1.7162929,68.858557,1.7104059);
        ctx.bezierCurveTo(68.853257,1.7074659,66.847381,1.6945679,64.78179700000001,1.6920449);
        ctx.bezierCurveTo(63.370320000000014,1.6900849,61.98401600000001,1.6975149,61.13231100000001,1.6973749);
        ctx.bezierCurveTo(60.923885000000006,1.6962549,60.173145000000005,1.7228839,60.173145000000005,1.7228839);
        ctx.fill();
        ctx.stroke();

        ctx.restore();
    }

    drawBorder() {

        var ctx = this.ctx;


        var borderWidth: number = Math.round(0.04 * this.width);
        var innerBorderWidth: number = 2;

        /* Add border 1 */
        ctx.lineWidth = borderWidth;
        ctx.strokeStyle = this.timeColor;
        ctx.strokeRect(borderWidth / 2, 
                       borderWidth / 2, 
                       this.width - borderWidth, 
                       this.height - borderWidth);

        /* Add border 2 */
        ctx.lineWidth = innerBorderWidth;
        ctx.strokeStyle = 'white';
        ctx.strokeRect(borderWidth, 
                       borderWidth, 
                       this.width - borderWidth * 2, 
                       this.height - borderWidth * 2);
    }
}
